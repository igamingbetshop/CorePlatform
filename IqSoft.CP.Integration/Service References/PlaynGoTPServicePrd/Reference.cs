//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IqSoft.CP.Integration.PlaynGoTPServicePrd {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FreegameOffer", Namespace="http://playngo.com/v1")]
    [System.SerializableAttribute()]
    public partial class FreegameOffer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OfferIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GameIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LinesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CoinsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoundsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> DenominationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpireTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FreegameExternalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TurnoverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FinishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoundsUsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FreegameTriggerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<IqSoft.CP.Integration.PlaynGoTPServicePrd.Currency> CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AllGamesVariantsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> VariantGameIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OfferCancelledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FreegameIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] GameIdListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OfferId {
            get {
                return this.OfferIdField;
            }
            set {
                if ((this.OfferIdField.Equals(value) != true)) {
                    this.OfferIdField = value;
                    this.RaisePropertyChanged("OfferId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.Nullable<int> GameId {
            get {
                return this.GameIdField;
            }
            set {
                if ((this.GameIdField.Equals(value) != true)) {
                    this.GameIdField = value;
                    this.RaisePropertyChanged("GameId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<int> Lines {
            get {
                return this.LinesField;
            }
            set {
                if ((this.LinesField.Equals(value) != true)) {
                    this.LinesField = value;
                    this.RaisePropertyChanged("Lines");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Nullable<int> Coins {
            get {
                return this.CoinsField;
            }
            set {
                if ((this.CoinsField.Equals(value) != true)) {
                    this.CoinsField = value;
                    this.RaisePropertyChanged("Coins");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int Rounds {
            get {
                return this.RoundsField;
            }
            set {
                if ((this.RoundsField.Equals(value) != true)) {
                    this.RoundsField = value;
                    this.RaisePropertyChanged("Rounds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public System.Nullable<decimal> Denomination {
            get {
                return this.DenominationField;
            }
            set {
                if ((this.DenominationField.Equals(value) != true)) {
                    this.DenominationField = value;
                    this.RaisePropertyChanged("Denomination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public System.Nullable<System.DateTime> ExpireTime {
            get {
                return this.ExpireTimeField;
            }
            set {
                if ((this.ExpireTimeField.Equals(value) != true)) {
                    this.ExpireTimeField = value;
                    this.RaisePropertyChanged("ExpireTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public string FreegameExternalId {
            get {
                return this.FreegameExternalIdField;
            }
            set {
                if ((object.ReferenceEquals(this.FreegameExternalIdField, value) != true)) {
                    this.FreegameExternalIdField = value;
                    this.RaisePropertyChanged("FreegameExternalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public System.Nullable<System.DateTime> Used {
            get {
                return this.UsedField;
            }
            set {
                if ((this.UsedField.Equals(value) != true)) {
                    this.UsedField = value;
                    this.RaisePropertyChanged("Used");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public int Turnover {
            get {
                return this.TurnoverField;
            }
            set {
                if ((this.TurnoverField.Equals(value) != true)) {
                    this.TurnoverField = value;
                    this.RaisePropertyChanged("Turnover");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public System.Nullable<System.DateTime> Finished {
            get {
                return this.FinishedField;
            }
            set {
                if ((this.FinishedField.Equals(value) != true)) {
                    this.FinishedField = value;
                    this.RaisePropertyChanged("Finished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public int RoundsUsed {
            get {
                return this.RoundsUsedField;
            }
            set {
                if ((this.RoundsUsedField.Equals(value) != true)) {
                    this.RoundsUsedField = value;
                    this.RaisePropertyChanged("RoundsUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public System.Nullable<int> FreegameTriggerId {
            get {
                return this.FreegameTriggerIdField;
            }
            set {
                if ((this.FreegameTriggerIdField.Equals(value) != true)) {
                    this.FreegameTriggerIdField = value;
                    this.RaisePropertyChanged("FreegameTriggerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public System.Nullable<IqSoft.CP.Integration.PlaynGoTPServicePrd.Currency> Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((this.CurrencyField.Equals(value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public System.Nullable<bool> AllGamesVariants {
            get {
                return this.AllGamesVariantsField;
            }
            set {
                if ((this.AllGamesVariantsField.Equals(value) != true)) {
                    this.AllGamesVariantsField = value;
                    this.RaisePropertyChanged("AllGamesVariants");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public System.Nullable<int> VariantGameId {
            get {
                return this.VariantGameIdField;
            }
            set {
                if ((this.VariantGameIdField.Equals(value) != true)) {
                    this.VariantGameIdField = value;
                    this.RaisePropertyChanged("VariantGameId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public bool OfferCancelled {
            get {
                return this.OfferCancelledField;
            }
            set {
                if ((this.OfferCancelledField.Equals(value) != true)) {
                    this.OfferCancelledField = value;
                    this.RaisePropertyChanged("OfferCancelled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=19)]
        public int ProductGroup {
            get {
                return this.ProductGroupField;
            }
            set {
                if ((this.ProductGroupField.Equals(value) != true)) {
                    this.ProductGroupField = value;
                    this.RaisePropertyChanged("ProductGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=20)]
        public System.Nullable<int> FreegameId {
            get {
                return this.FreegameIdField;
            }
            set {
                if ((this.FreegameIdField.Equals(value) != true)) {
                    this.FreegameIdField = value;
                    this.RaisePropertyChanged("FreegameId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=21)]
        public int[] GameIdList {
            get {
                return this.GameIdListField;
            }
            set {
                if ((object.ReferenceEquals(this.GameIdListField, value) != true)) {
                    this.GameIdListField = value;
                    this.RaisePropertyChanged("GameIdList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Currency", Namespace="http://playngo.com/v1")]
    public enum Currency : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EUR = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        USD = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SEK = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NOK = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DKK = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ARS = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CAD = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GBP = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HUF = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ILS = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INR = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISK = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JPY = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ZAR = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RUB = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AUD = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CHF = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PLN = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CNY = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EEK = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LTL = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LVL = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXN = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NZD = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CZK = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HRK = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RON = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BGN = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TRY = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VEF = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BRL = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HKD = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SGD = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IDR = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GEL = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEN = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MYR = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        THB = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TWD = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMB = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AED = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BAM = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MBC = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CRD = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KRW = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VND = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CLP = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AFN = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ALL = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DZD = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AOA = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AMD = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AWG = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AZN = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BSD = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BHD = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BDT = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BBD = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BYR = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BZD = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BMD = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTN = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BOB = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BWP = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BND = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BIF = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KHR = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CVE = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KYD = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XAF = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XPF = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KMF = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CDF = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CRC = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CUP = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DJF = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOP = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XCD = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EGP = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ETB = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FKP = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FJD = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMD = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GHS = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GIP = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GTQ = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GNF = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GYD = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HTG = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HNL = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IRR = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IQD = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JMD = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JOD = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KZT = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KES = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KWD = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KGS = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LAK = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LBP = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LSL = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LRD = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LYD = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MOP = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MKD = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MGA = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MWK = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MVR = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MRO = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MUR = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MDL = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MNT = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MAD = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MZN = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MMK = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NAD = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NPR = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ANG = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NIO = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NGN = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KPW = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OMR = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PKR = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PGK = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PYG = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PHP = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QAR = 127,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RWF = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SHP = 129,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WST = 130,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        STD = 131,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SAR = 132,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RSD = 133,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SCR = 134,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SLL = 135,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SBD = 136,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SOS = 137,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LKR = 138,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SDG = 139,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SRD = 140,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SZL = 141,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SYP = 142,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TJS = 143,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TZS = 144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TOP = 145,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TTD = 146,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TND = 147,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TMT = 148,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UGX = 149,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UAH = 150,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UYU = 151,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UZS = 152,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VUV = 153,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XOF = 154,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        YER = 155,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ZMW = 156,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COP = 157,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ERN = 158,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PAB = 159,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BYN = 160,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KVD = 161,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UBC = 162,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KDR = 163,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ACC = 164,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGC = 165,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CHP = 166,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CPS = 167,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLD = 168,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        H5C = 169,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RUR = 170,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XDR = 171,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ETH = 172,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VES = 173,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceFault", Namespace="http://playngo.com/v1")]
    [System.SerializableAttribute()]
    public partial class ServiceFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private IqSoft.CP.Integration.PlaynGoTPServicePrd.ErrorCode ErrorIdField;
        
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public IqSoft.CP.Integration.PlaynGoTPServicePrd.ErrorCode ErrorId {
            get {
                return this.ErrorIdField;
            }
            set {
                if ((this.ErrorIdField.Equals(value) != true)) {
                    this.ErrorIdField = value;
                    this.RaisePropertyChanged("ErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ErrorCode", Namespace="http://playngo.com/v1")]
    public enum ErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InternalError = 1000,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidArguments = 1003,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidSession = 1004,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidCurrency = 1006,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccessRestricted = 1007,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NicknameTaken = 2000,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserDisabled = 2001,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnknownUser = 2002,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserLocked = 2003,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WrongUserPassword = 2004,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepositFailed = 2005,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WithdrawFailed = 2006,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ActionDelayed = 2007,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MandatoryFieldMissing = 2008,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoginExists = 2009,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaxLoginRetriesExceeded = 2010,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidCampaign = 2011,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserTooYoung = 2012,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IPBlocked = 2013,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidCountryRegion = 2014,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaxPasswordChangesExceeded = 2015,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FailedUserInfoUpdate = 2016,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IncorrectOldPassword = 2017,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FailedChangePassword = 2018,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NicknameOffensive = 2019,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaxRefillsReached = 2020,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoSuchExchangeRate = 2021,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoSuchJackpot = 2022,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TournamentUnknown = 2023,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServerFull = 2024,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransferNotAllowed = 2025,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Timeout = 2026,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IncompleteUser = 2027,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotEnoughMoney = 2028,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnknownLink = 2029,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidIP = 2030,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidGame = 2031,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidID = 2032,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserNotVerified = 2033,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaxAccountsPerEmail = 2034,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidLogin = 2100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidPassword = 2101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidNickname = 2102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidFirstName = 2103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidMiddleName = 2104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidLastName = 2105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidAddress = 2106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidCountry = 2107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidRegion = 2108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidZip = 2109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidCity = 2110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidPhone = 2111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidEmail = 2112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidMobileNr = 2113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidBirthdate = 2114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidReferAFriend = 2115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidDataState = 2200,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnknownOrderType = 2500,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WithdrawalExceedsDeposits = 2501,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidAmount = 2502,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LimitExceededDaily = 2503,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LimitExceededWeekly = 2504,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LimitExceededMonthly = 2505,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnknownBonusCode = 2506,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BonusOfferUsed = 2507,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SameCreatorAndSigner = 2514,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DuplicateOnGameTicket = 2515,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SystemMessageDeleting = 2516,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReferencedMessageDeleting = 2517,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotRegisteredAtOnGame = 2518,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotAllowed = 2519,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DuplicateEntry = 2520,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnableToDeleteWhenInUse = 2521,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidMultiplier = 2522,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidTimeSpan = 2523,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidationFault", Namespace="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
    [System.SerializableAttribute()]
    public partial class ValidationFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IqSoft.CP.Integration.PlaynGoTPServicePrd.ValidationDetail[] DetailsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IqSoft.CP.Integration.PlaynGoTPServicePrd.ValidationDetail[] Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidationDetail", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Practices.EnterpriseLibrary.Val" +
        "idation.Integration.WCF")]
    [System.SerializableAttribute()]
    public partial class ValidationDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tag {
            get {
                return this.TagField;
            }
            set {
                if ((object.ReferenceEquals(this.TagField, value) != true)) {
                    this.TagField = value;
                    this.RaisePropertyChanged("Tag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FreegameOfferState", Namespace="http://playngo.com/v1")]
    public enum FreegameOfferState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Completed = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OpenGameId", Namespace="http://playngo.com/v1")]
    [System.SerializableAttribute()]
    public partial class OpenGameId : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GameIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SerializedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MobileGameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IqSoft.CP.Integration.PlaynGoTPServicePrd.Money BetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GameNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GameTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GameId {
            get {
                return this.GameIdField;
            }
            set {
                if ((this.GameIdField.Equals(value) != true)) {
                    this.GameIdField = value;
                    this.RaisePropertyChanged("GameId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gid {
            get {
                return this.GidField;
            }
            set {
                if ((object.ReferenceEquals(this.GidField, value) != true)) {
                    this.GidField = value;
                    this.RaisePropertyChanged("Gid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Serialized {
            get {
                return this.SerializedField;
            }
            set {
                if ((this.SerializedField.Equals(value) != true)) {
                    this.SerializedField = value;
                    this.RaisePropertyChanged("Serialized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool MobileGame {
            get {
                return this.MobileGameField;
            }
            set {
                if ((this.MobileGameField.Equals(value) != true)) {
                    this.MobileGameField = value;
                    this.RaisePropertyChanged("MobileGame");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public IqSoft.CP.Integration.PlaynGoTPServicePrd.Money Bet {
            get {
                return this.BetField;
            }
            set {
                if ((object.ReferenceEquals(this.BetField, value) != true)) {
                    this.BetField = value;
                    this.RaisePropertyChanged("Bet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string GameName {
            get {
                return this.GameNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GameNameField, value) != true)) {
                    this.GameNameField = value;
                    this.RaisePropertyChanged("GameName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string GameType {
            get {
                return this.GameTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GameTypeField, value) != true)) {
                    this.GameTypeField = value;
                    this.RaisePropertyChanged("GameType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Money", Namespace="http://playngo.com/v1")]
    [System.SerializableAttribute()]
    public partial class Money : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string ValueField;
        
        private IqSoft.CP.Integration.PlaynGoTPServicePrd.Currency CurrencyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public IqSoft.CP.Integration.PlaynGoTPServicePrd.Currency Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((this.CurrencyField.Equals(value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerAchievementsTrigger", Namespace="http://playngo.com/v1")]
    [System.SerializableAttribute()]
    public partial class PlayerAchievementsTrigger : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GameIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> RoundIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SpinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ResultIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NicknameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FreegameTriggerIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string ParentName {
            get {
                return this.ParentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentNameField, value) != true)) {
                    this.ParentNameField = value;
                    this.RaisePropertyChanged("ParentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<int> GameId {
            get {
                return this.GameIdField;
            }
            set {
                if ((this.GameIdField.Equals(value) != true)) {
                    this.GameIdField = value;
                    this.RaisePropertyChanged("GameId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Nullable<long> RoundId {
            get {
                return this.RoundIdField;
            }
            set {
                if ((this.RoundIdField.Equals(value) != true)) {
                    this.RoundIdField = value;
                    this.RaisePropertyChanged("RoundId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public System.Nullable<int> Spin {
            get {
                return this.SpinField;
            }
            set {
                if ((this.SpinField.Equals(value) != true)) {
                    this.SpinField = value;
                    this.RaisePropertyChanged("Spin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public System.Nullable<int> ResultId {
            get {
                return this.ResultIdField;
            }
            set {
                if ((this.ResultIdField.Equals(value) != true)) {
                    this.ResultIdField = value;
                    this.RaisePropertyChanged("ResultId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public System.Nullable<int> Points {
            get {
                return this.PointsField;
            }
            set {
                if ((this.PointsField.Equals(value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public string Nickname {
            get {
                return this.NicknameField;
            }
            set {
                if ((object.ReferenceEquals(this.NicknameField, value) != true)) {
                    this.NicknameField = value;
                    this.RaisePropertyChanged("Nickname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public System.Nullable<int> FreegameTriggerId {
            get {
                return this.FreegameTriggerIdField;
            }
            set {
                if ((this.FreegameTriggerIdField.Equals(value) != true)) {
                    this.FreegameTriggerIdField = value;
                    this.RaisePropertyChanged("FreegameTriggerId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AchievementsTrigger", Namespace="http://playngo.com/v1")]
    [System.SerializableAttribute()]
    public partial class AchievementsTrigger : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GameIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> RoundIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SpinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResultIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FreegameTriggerIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalId {
            get {
                return this.ExternalIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIdField, value) != true)) {
                    this.ExternalIdField = value;
                    this.RaisePropertyChanged("ExternalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string BrandId {
            get {
                return this.BrandIdField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandIdField, value) != true)) {
                    this.BrandIdField = value;
                    this.RaisePropertyChanged("BrandId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.Nullable<System.DateTime> Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string ParentName {
            get {
                return this.ParentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentNameField, value) != true)) {
                    this.ParentNameField = value;
                    this.RaisePropertyChanged("ParentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public System.Nullable<int> GameId {
            get {
                return this.GameIdField;
            }
            set {
                if ((this.GameIdField.Equals(value) != true)) {
                    this.GameIdField = value;
                    this.RaisePropertyChanged("GameId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public System.Nullable<long> RoundId {
            get {
                return this.RoundIdField;
            }
            set {
                if ((this.RoundIdField.Equals(value) != true)) {
                    this.RoundIdField = value;
                    this.RaisePropertyChanged("RoundId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public int Spin {
            get {
                return this.SpinField;
            }
            set {
                if ((this.SpinField.Equals(value) != true)) {
                    this.SpinField = value;
                    this.RaisePropertyChanged("Spin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public int ResultId {
            get {
                return this.ResultIdField;
            }
            set {
                if ((this.ResultIdField.Equals(value) != true)) {
                    this.ResultIdField = value;
                    this.RaisePropertyChanged("ResultId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public System.Nullable<int> Points {
            get {
                return this.PointsField;
            }
            set {
                if ((this.PointsField.Equals(value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public System.Nullable<int> FreegameTriggerId {
            get {
                return this.FreegameTriggerIdField;
            }
            set {
                if ((this.FreegameTriggerIdField.Equals(value) != true)) {
                    this.FreegameTriggerIdField = value;
                    this.RaisePropertyChanged("FreegameTriggerId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AchievementsSummary", Namespace="http://playngo.com/v1")]
    [System.SerializableAttribute()]
    public partial class AchievementsSummary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NicknameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IqSoft.CP.Integration.PlaynGoTPServicePrd.AchievementGame[] AchievementGamesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalId {
            get {
                return this.ExternalIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIdField, value) != true)) {
                    this.ExternalIdField = value;
                    this.RaisePropertyChanged("ExternalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string BrandId {
            get {
                return this.BrandIdField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandIdField, value) != true)) {
                    this.BrandIdField = value;
                    this.RaisePropertyChanged("BrandId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int Points {
            get {
                return this.PointsField;
            }
            set {
                if ((this.PointsField.Equals(value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Nickname {
            get {
                return this.NicknameField;
            }
            set {
                if ((object.ReferenceEquals(this.NicknameField, value) != true)) {
                    this.NicknameField = value;
                    this.RaisePropertyChanged("Nickname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public IqSoft.CP.Integration.PlaynGoTPServicePrd.AchievementGame[] AchievementGames {
            get {
                return this.AchievementGamesField;
            }
            set {
                if ((object.ReferenceEquals(this.AchievementGamesField, value) != true)) {
                    this.AchievementGamesField = value;
                    this.RaisePropertyChanged("AchievementGames");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AchievementGame", Namespace="http://playngo.com/v1")]
    [System.SerializableAttribute()]
    public partial class AchievementGame : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GameIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PointsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GameId {
            get {
                return this.GameIdField;
            }
            set {
                if ((this.GameIdField.Equals(value) != true)) {
                    this.GameIdField = value;
                    this.RaisePropertyChanged("GameId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Points {
            get {
                return this.PointsField;
            }
            set {
                if ((this.PointsField.Equals(value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AchievementFilterType", Namespace="http://playngo.com/v1")]
    public enum AchievementFilterType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Future = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Historical = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ActiveAndFuture = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AchievementConfiguration", Namespace="http://playngo.com/v1")]
    [System.SerializableAttribute()]
    public partial class AchievementConfiguration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GameIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FreegameTriggerIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentName {
            get {
                return this.ParentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentNameField, value) != true)) {
                    this.ParentNameField = value;
                    this.RaisePropertyChanged("ParentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.Nullable<int> GameId {
            get {
                return this.GameIdField;
            }
            set {
                if ((this.GameIdField.Equals(value) != true)) {
                    this.GameIdField = value;
                    this.RaisePropertyChanged("GameId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int Points {
            get {
                return this.PointsField;
            }
            set {
                if ((this.PointsField.Equals(value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public System.Nullable<int> FreegameTriggerId {
            get {
                return this.FreegameTriggerIdField;
            }
            set {
                if ((this.FreegameTriggerIdField.Equals(value) != true)) {
                    this.FreegameTriggerIdField = value;
                    this.RaisePropertyChanged("FreegameTriggerId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameConfigurationResourceList", Namespace="http://playngo.com/v1")]
    [System.SerializableAttribute()]
    public partial class GameConfigurationResourceList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GameConfigurationsReturnCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IqSoft.CP.Integration.PlaynGoTPServicePrd.GameConfigurationResourceWrapper[] GameConfigurationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IqSoft.CP.Integration.PlaynGoTPServicePrd.FailedGameConfigurationSummary[] FailedGameConfigurationsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GameConfigurationsReturnCount {
            get {
                return this.GameConfigurationsReturnCountField;
            }
            set {
                if ((this.GameConfigurationsReturnCountField.Equals(value) != true)) {
                    this.GameConfigurationsReturnCountField = value;
                    this.RaisePropertyChanged("GameConfigurationsReturnCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public IqSoft.CP.Integration.PlaynGoTPServicePrd.GameConfigurationResourceWrapper[] GameConfigurations {
            get {
                return this.GameConfigurationsField;
            }
            set {
                if ((object.ReferenceEquals(this.GameConfigurationsField, value) != true)) {
                    this.GameConfigurationsField = value;
                    this.RaisePropertyChanged("GameConfigurations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public IqSoft.CP.Integration.PlaynGoTPServicePrd.FailedGameConfigurationSummary[] FailedGameConfigurations {
            get {
                return this.FailedGameConfigurationsField;
            }
            set {
                if ((object.ReferenceEquals(this.FailedGameConfigurationsField, value) != true)) {
                    this.FailedGameConfigurationsField = value;
                    this.RaisePropertyChanged("FailedGameConfigurations");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameConfigurationResourceWrapper", Namespace="http://playngo.com/v1")]
    [System.SerializableAttribute()]
    public partial class GameConfigurationResourceWrapper : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GameIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IqSoft.CP.Integration.PlaynGoTPServicePrd.GameConfigurationResource GameConfigurationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GameId {
            get {
                return this.GameIdField;
            }
            set {
                if ((this.GameIdField.Equals(value) != true)) {
                    this.GameIdField = value;
                    this.RaisePropertyChanged("GameId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public IqSoft.CP.Integration.PlaynGoTPServicePrd.GameConfigurationResource GameConfiguration {
            get {
                return this.GameConfigurationField;
            }
            set {
                if ((object.ReferenceEquals(this.GameConfigurationField, value) != true)) {
                    this.GameConfigurationField = value;
                    this.RaisePropertyChanged("GameConfiguration");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FailedGameConfigurationSummary", Namespace="http://playngo.com/v1")]
    [System.SerializableAttribute()]
    public partial class FailedGameConfigurationSummary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GameIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailedMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GameId {
            get {
                return this.GameIdField;
            }
            set {
                if ((this.GameIdField.Equals(value) != true)) {
                    this.GameIdField = value;
                    this.RaisePropertyChanged("GameId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string FailedMessage {
            get {
                return this.FailedMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.FailedMessageField, value) != true)) {
                    this.FailedMessageField = value;
                    this.RaisePropertyChanged("FailedMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameConfigurationResource", Namespace="http://playngo.com/v1")]
    [System.SerializableAttribute()]
    public partial class GameConfigurationResource : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IqSoft.CP.Integration.PlaynGoTPServicePrd.GameConfigurationSettingsResource DefaultGameSettingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrencyLimitMultiplierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrencyScaleMultiplierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RtpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MinJackpotRtpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MaxJackpotRtpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal[] DenominationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IqSoft.CP.Integration.PlaynGoTPServicePrd.GameConfigurationJackpotResource JackpotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IqSoft.CP.Integration.PlaynGoTPServicePrd.GameConfigurationMysteryJackpotResource MysteryJackpotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IqSoft.CP.Integration.PlaynGoTPServicePrd.GameConfigurationMysteryJackpotResource GuaranteedJackpotField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IqSoft.CP.Integration.PlaynGoTPServicePrd.GameConfigurationSettingsResource DefaultGameSettings {
            get {
                return this.DefaultGameSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultGameSettingsField, value) != true)) {
                    this.DefaultGameSettingsField = value;
                    this.RaisePropertyChanged("DefaultGameSettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int CurrencyLimitMultiplier {
            get {
                return this.CurrencyLimitMultiplierField;
            }
            set {
                if ((this.CurrencyLimitMultiplierField.Equals(value) != true)) {
                    this.CurrencyLimitMultiplierField = value;
                    this.RaisePropertyChanged("CurrencyLimitMultiplier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int CurrencyScaleMultiplier {
            get {
                return this.CurrencyScaleMultiplierField;
            }
            set {
                if ((this.CurrencyScaleMultiplierField.Equals(value) != true)) {
                    this.CurrencyScaleMultiplierField = value;
                    this.RaisePropertyChanged("CurrencyScaleMultiplier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<int> Rtp {
            get {
                return this.RtpField;
            }
            set {
                if ((this.RtpField.Equals(value) != true)) {
                    this.RtpField = value;
                    this.RaisePropertyChanged("Rtp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Nullable<decimal> MinJackpotRtp {
            get {
                return this.MinJackpotRtpField;
            }
            set {
                if ((this.MinJackpotRtpField.Equals(value) != true)) {
                    this.MinJackpotRtpField = value;
                    this.RaisePropertyChanged("MinJackpotRtp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public System.Nullable<decimal> MaxJackpotRtp {
            get {
                return this.MaxJackpotRtpField;
            }
            set {
                if ((this.MaxJackpotRtpField.Equals(value) != true)) {
                    this.MaxJackpotRtpField = value;
                    this.RaisePropertyChanged("MaxJackpotRtp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public decimal[] Denominations {
            get {
                return this.DenominationsField;
            }
            set {
                if ((object.ReferenceEquals(this.DenominationsField, value) != true)) {
                    this.DenominationsField = value;
                    this.RaisePropertyChanged("Denominations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public IqSoft.CP.Integration.PlaynGoTPServicePrd.GameConfigurationJackpotResource Jackpot {
            get {
                return this.JackpotField;
            }
            set {
                if ((object.ReferenceEquals(this.JackpotField, value) != true)) {
                    this.JackpotField = value;
                    this.RaisePropertyChanged("Jackpot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public IqSoft.CP.Integration.PlaynGoTPServicePrd.GameConfigurationMysteryJackpotResource MysteryJackpot {
            get {
                return this.MysteryJackpotField;
            }
            set {
                if ((object.ReferenceEquals(this.MysteryJackpotField, value) != true)) {
                    this.MysteryJackpotField = value;
                    this.RaisePropertyChanged("MysteryJackpot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public IqSoft.CP.Integration.PlaynGoTPServicePrd.GameConfigurationMysteryJackpotResource GuaranteedJackpot {
            get {
                return this.GuaranteedJackpotField;
            }
            set {
                if ((object.ReferenceEquals(this.GuaranteedJackpotField, value) != true)) {
                    this.GuaranteedJackpotField = value;
                    this.RaisePropertyChanged("GuaranteedJackpot");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameConfigurationSettingsResource", Namespace="http://playngo.com/v1")]
    [System.SerializableAttribute()]
    public partial class GameConfigurationSettingsResource : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GameIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GameModuleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GameTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RefundInactiveBetsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal[] SupportedDenominationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] SupportedCoinsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] SupportedLinesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] SupportedLimitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IqSoft.CP.Integration.PlaynGoTPServicePrd.GameConfigurationRtpSettingResource[] RtpSettingsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GameId {
            get {
                return this.GameIdField;
            }
            set {
                if ((this.GameIdField.Equals(value) != true)) {
                    this.GameIdField = value;
                    this.RaisePropertyChanged("GameId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string GId {
            get {
                return this.GIdField;
            }
            set {
                if ((object.ReferenceEquals(this.GIdField, value) != true)) {
                    this.GIdField = value;
                    this.RaisePropertyChanged("GId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string GameModule {
            get {
                return this.GameModuleField;
            }
            set {
                if ((object.ReferenceEquals(this.GameModuleField, value) != true)) {
                    this.GameModuleField = value;
                    this.RaisePropertyChanged("GameModule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string GameType {
            get {
                return this.GameTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GameTypeField, value) != true)) {
                    this.GameTypeField = value;
                    this.RaisePropertyChanged("GameType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool RefundInactiveBets {
            get {
                return this.RefundInactiveBetsField;
            }
            set {
                if ((this.RefundInactiveBetsField.Equals(value) != true)) {
                    this.RefundInactiveBetsField = value;
                    this.RaisePropertyChanged("RefundInactiveBets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public decimal[] SupportedDenominations {
            get {
                return this.SupportedDenominationsField;
            }
            set {
                if ((object.ReferenceEquals(this.SupportedDenominationsField, value) != true)) {
                    this.SupportedDenominationsField = value;
                    this.RaisePropertyChanged("SupportedDenominations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public int[] SupportedCoins {
            get {
                return this.SupportedCoinsField;
            }
            set {
                if ((object.ReferenceEquals(this.SupportedCoinsField, value) != true)) {
                    this.SupportedCoinsField = value;
                    this.RaisePropertyChanged("SupportedCoins");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public int[] SupportedLines {
            get {
                return this.SupportedLinesField;
            }
            set {
                if ((object.ReferenceEquals(this.SupportedLinesField, value) != true)) {
                    this.SupportedLinesField = value;
                    this.RaisePropertyChanged("SupportedLines");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public string[] SupportedLimits {
            get {
                return this.SupportedLimitsField;
            }
            set {
                if ((object.ReferenceEquals(this.SupportedLimitsField, value) != true)) {
                    this.SupportedLimitsField = value;
                    this.RaisePropertyChanged("SupportedLimits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public IqSoft.CP.Integration.PlaynGoTPServicePrd.GameConfigurationRtpSettingResource[] RtpSettings {
            get {
                return this.RtpSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.RtpSettingsField, value) != true)) {
                    this.RtpSettingsField = value;
                    this.RaisePropertyChanged("RtpSettings");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameConfigurationJackpotResource", Namespace="http://playngo.com/v1")]
    [System.SerializableAttribute()]
    public partial class GameConfigurationJackpotResource : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IqSoft.CP.Integration.PlaynGoTPServicePrd.GameConfigurationJackpotItemResource[] JackpotsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IqSoft.CP.Integration.PlaynGoTPServicePrd.GameConfigurationJackpotItemResource[] Jackpots {
            get {
                return this.JackpotsField;
            }
            set {
                if ((object.ReferenceEquals(this.JackpotsField, value) != true)) {
                    this.JackpotsField = value;
                    this.RaisePropertyChanged("Jackpots");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameConfigurationMysteryJackpotResource", Namespace="http://playngo.com/v1")]
    [System.SerializableAttribute()]
    public partial class GameConfigurationMysteryJackpotResource : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IqSoft.CP.Integration.PlaynGoTPServicePrd.GameConfigurationMysteryJackpotItemResource[] JackpotsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IqSoft.CP.Integration.PlaynGoTPServicePrd.GameConfigurationMysteryJackpotItemResource[] Jackpots {
            get {
                return this.JackpotsField;
            }
            set {
                if ((object.ReferenceEquals(this.JackpotsField, value) != true)) {
                    this.JackpotsField = value;
                    this.RaisePropertyChanged("Jackpots");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameConfigurationRtpSettingResource", Namespace="http://playngo.com/v1")]
    [System.SerializableAttribute()]
    public partial class GameConfigurationRtpSettingResource : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GameIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SettingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DefaultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MinRtpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MaxRtpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> StandardDeviationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MaxWinMultiplierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> HitRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ObservedMaxWinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ObservedMillionRoundsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FreeSpinLimitField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GameId {
            get {
                return this.GameIdField;
            }
            set {
                if ((this.GameIdField.Equals(value) != true)) {
                    this.GameIdField = value;
                    this.RaisePropertyChanged("GameId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Setting {
            get {
                return this.SettingField;
            }
            set {
                if ((this.SettingField.Equals(value) != true)) {
                    this.SettingField = value;
                    this.RaisePropertyChanged("Setting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.Nullable<int> ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool Default {
            get {
                return this.DefaultField;
            }
            set {
                if ((this.DefaultField.Equals(value) != true)) {
                    this.DefaultField = value;
                    this.RaisePropertyChanged("Default");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public decimal MinRtp {
            get {
                return this.MinRtpField;
            }
            set {
                if ((this.MinRtpField.Equals(value) != true)) {
                    this.MinRtpField = value;
                    this.RaisePropertyChanged("MinRtp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public decimal MaxRtp {
            get {
                return this.MaxRtpField;
            }
            set {
                if ((this.MaxRtpField.Equals(value) != true)) {
                    this.MaxRtpField = value;
                    this.RaisePropertyChanged("MaxRtp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public System.Nullable<decimal> StandardDeviation {
            get {
                return this.StandardDeviationField;
            }
            set {
                if ((this.StandardDeviationField.Equals(value) != true)) {
                    this.StandardDeviationField = value;
                    this.RaisePropertyChanged("StandardDeviation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public System.Nullable<decimal> MaxWinMultiplier {
            get {
                return this.MaxWinMultiplierField;
            }
            set {
                if ((this.MaxWinMultiplierField.Equals(value) != true)) {
                    this.MaxWinMultiplierField = value;
                    this.RaisePropertyChanged("MaxWinMultiplier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public System.Nullable<decimal> HitRate {
            get {
                return this.HitRateField;
            }
            set {
                if ((this.HitRateField.Equals(value) != true)) {
                    this.HitRateField = value;
                    this.RaisePropertyChanged("HitRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public System.Nullable<decimal> ObservedMaxWin {
            get {
                return this.ObservedMaxWinField;
            }
            set {
                if ((this.ObservedMaxWinField.Equals(value) != true)) {
                    this.ObservedMaxWinField = value;
                    this.RaisePropertyChanged("ObservedMaxWin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public System.Nullable<decimal> ObservedMillionRounds {
            get {
                return this.ObservedMillionRoundsField;
            }
            set {
                if ((this.ObservedMillionRoundsField.Equals(value) != true)) {
                    this.ObservedMillionRoundsField = value;
                    this.RaisePropertyChanged("ObservedMillionRounds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public System.Nullable<int> FreeSpinLimit {
            get {
                return this.FreeSpinLimitField;
            }
            set {
                if ((this.FreeSpinLimitField.Equals(value) != true)) {
                    this.FreeSpinLimitField = value;
                    this.RaisePropertyChanged("FreeSpinLimit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameConfigurationJackpotItemResource", Namespace="http://playngo.com/v1")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IqSoft.CP.Integration.PlaynGoTPServicePrd.GameConfigurationMysteryJackpotItemResource))]
    public partial class GameConfigurationJackpotItemResource : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> FractionOfBetField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Index {
            get {
                return this.IndexField;
            }
            set {
                if ((this.IndexField.Equals(value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.Nullable<decimal> FractionOfBet {
            get {
                return this.FractionOfBetField;
            }
            set {
                if ((this.FractionOfBetField.Equals(value) != true)) {
                    this.FractionOfBetField = value;
                    this.RaisePropertyChanged("FractionOfBet");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameConfigurationMysteryJackpotItemResource", Namespace="http://playngo.com/v1")]
    [System.SerializableAttribute()]
    public partial class GameConfigurationMysteryJackpotItemResource : IqSoft.CP.Integration.PlaynGoTPServicePrd.GameConfigurationJackpotItemResource {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PrizeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoundsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalBetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PrizeType {
            get {
                return this.PrizeTypeField;
            }
            set {
                if ((this.PrizeTypeField.Equals(value) != true)) {
                    this.PrizeTypeField = value;
                    this.RaisePropertyChanged("PrizeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int Rounds {
            get {
                return this.RoundsField;
            }
            set {
                if ((this.RoundsField.Equals(value) != true)) {
                    this.RoundsField = value;
                    this.RaisePropertyChanged("Rounds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public decimal TotalBet {
            get {
                return this.TotalBetField;
            }
            set {
                if ((this.TotalBetField.Equals(value) != true)) {
                    this.TotalBetField = value;
                    this.RaisePropertyChanged("TotalBet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Position {
            get {
                return this.PositionField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionField, value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CasinoGameSummary", Namespace="http://playngo.com/v1")]
    [System.SerializableAttribute()]
    public partial class CasinoGameSummary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GameIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GameTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GameId {
            get {
                return this.GameIdField;
            }
            set {
                if ((this.GameIdField.Equals(value) != true)) {
                    this.GameIdField = value;
                    this.RaisePropertyChanged("GameId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string GameType {
            get {
                return this.GameTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GameTypeField, value) != true)) {
                    this.GameTypeField = value;
                    this.RaisePropertyChanged("GameType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string GId {
            get {
                return this.GIdField;
            }
            set {
                if ((object.ReferenceEquals(this.GIdField, value) != true)) {
                    this.GIdField = value;
                    this.RaisePropertyChanged("GId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://playngo.com/v1", ConfigurationName="PlaynGoTPServicePrd.CasinoGameTPService")]
    public interface CasinoGameTPService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://playngo.com/v1/CasinoGameTPService/AddFreegameOffers", ReplyAction="http://playngo.com/v1/CasinoGameTPService/AddFreegameOffersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(IqSoft.CP.Integration.PlaynGoTPServicePrd.ServiceFault), Action="http://playngo.com/v1/CasinoGameTPService/AddFreegameOffersServiceFaultFault", Name="ServiceFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(IqSoft.CP.Integration.PlaynGoTPServicePrd.ValidationFault), Action="http://playngo.com/v1/CasinoGameTPService/AddFreegameOffersValidationFaultFault", Name="ValidationFault", Namespace="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        IqSoft.CP.Integration.PlaynGoTPServicePrd.FreegameOffer AddFreegameOffers(string UserId, System.Nullable<int> GameId, System.Nullable<int> Lines, System.Nullable<int> Coins, System.Nullable<decimal> Denomination, System.Nullable<int> Rounds, System.Nullable<System.DateTime> ExpireTime, System.Nullable<int> Turnover, string FreegameExternalId, string RequestId, System.Nullable<int> TriggerId, System.Nullable<bool> AllGamesVariants, int[] GameIdList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://playngo.com/v1/CasinoGameTPService/AddFreegameOffers", ReplyAction="http://playngo.com/v1/CasinoGameTPService/AddFreegameOffersResponse")]
        System.Threading.Tasks.Task<IqSoft.CP.Integration.PlaynGoTPServicePrd.FreegameOffer> AddFreegameOffersAsync(string UserId, System.Nullable<int> GameId, System.Nullable<int> Lines, System.Nullable<int> Coins, System.Nullable<decimal> Denomination, System.Nullable<int> Rounds, System.Nullable<System.DateTime> ExpireTime, System.Nullable<int> Turnover, string FreegameExternalId, string RequestId, System.Nullable<int> TriggerId, System.Nullable<bool> AllGamesVariants, int[] GameIdList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://playngo.com/v1/CasinoGameTPService/GetFreegameOffers", ReplyAction="http://playngo.com/v1/CasinoGameTPService/GetFreegameOffersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(IqSoft.CP.Integration.PlaynGoTPServicePrd.ServiceFault), Action="http://playngo.com/v1/CasinoGameTPService/GetFreegameOffersServiceFaultFault", Name="ServiceFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(IqSoft.CP.Integration.PlaynGoTPServicePrd.ValidationFault), Action="http://playngo.com/v1/CasinoGameTPService/GetFreegameOffersValidationFaultFault", Name="ValidationFault", Namespace="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Offers")]
        IqSoft.CP.Integration.PlaynGoTPServicePrd.FreegameOffer[] GetFreegameOffers(string UserId, int Skip, int Take, IqSoft.CP.Integration.PlaynGoTPServicePrd.FreegameOfferState State);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://playngo.com/v1/CasinoGameTPService/GetFreegameOffers", ReplyAction="http://playngo.com/v1/CasinoGameTPService/GetFreegameOffersResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Offers")]
        System.Threading.Tasks.Task<IqSoft.CP.Integration.PlaynGoTPServicePrd.FreegameOffer[]> GetFreegameOffersAsync(string UserId, int Skip, int Take, IqSoft.CP.Integration.PlaynGoTPServicePrd.FreegameOfferState State);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://playngo.com/v1/CasinoGameTPService/CancelFreegame", ReplyAction="http://playngo.com/v1/CasinoGameTPService/CancelFreegameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(IqSoft.CP.Integration.PlaynGoTPServicePrd.ServiceFault), Action="http://playngo.com/v1/CasinoGameTPService/CancelFreegameServiceFaultFault", Name="ServiceFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(IqSoft.CP.Integration.PlaynGoTPServicePrd.ValidationFault), Action="http://playngo.com/v1/CasinoGameTPService/CancelFreegameValidationFaultFault", Name="ValidationFault", Namespace="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        void CancelFreegame(string RequestId, int ProductGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://playngo.com/v1/CasinoGameTPService/CancelFreegame", ReplyAction="http://playngo.com/v1/CasinoGameTPService/CancelFreegameResponse")]
        System.Threading.Tasks.Task CancelFreegameAsync(string RequestId, int ProductGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://playngo.com/v1/CasinoGameTPService/GetUnfinishedGames", ReplyAction="http://playngo.com/v1/CasinoGameTPService/GetUnfinishedGamesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(IqSoft.CP.Integration.PlaynGoTPServicePrd.ServiceFault), Action="http://playngo.com/v1/CasinoGameTPService/GetUnfinishedGamesServiceFaultFault", Name="ServiceFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(IqSoft.CP.Integration.PlaynGoTPServicePrd.ValidationFault), Action="http://playngo.com/v1/CasinoGameTPService/GetUnfinishedGamesValidationFaultFault", Name="ValidationFault", Namespace="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="OpenGameIds")]
        IqSoft.CP.Integration.PlaynGoTPServicePrd.OpenGameId[] GetUnfinishedGames(string ExternalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://playngo.com/v1/CasinoGameTPService/GetUnfinishedGames", ReplyAction="http://playngo.com/v1/CasinoGameTPService/GetUnfinishedGamesResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="OpenGameIds")]
        System.Threading.Tasks.Task<IqSoft.CP.Integration.PlaynGoTPServicePrd.OpenGameId[]> GetUnfinishedGamesAsync(string ExternalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://playngo.com/v1/CasinoGameTPService/GetTriggeredAchievementsByPlayer", ReplyAction="http://playngo.com/v1/CasinoGameTPService/GetTriggeredAchievementsByPlayerRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(IqSoft.CP.Integration.PlaynGoTPServicePrd.ServiceFault), Action="http://playngo.com/v1/CasinoGameTPService/GetTriggeredAchievementsByPlayerService" +
            "FaultFault", Name="ServiceFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(IqSoft.CP.Integration.PlaynGoTPServicePrd.ValidationFault), Action="http://playngo.com/v1/CasinoGameTPService/GetTriggeredAchievementsByPlayerValidat" +
            "ionFaultFault", Name="ValidationFault", Namespace="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="TriggeredAchievements")]
        IqSoft.CP.Integration.PlaynGoTPServicePrd.PlayerAchievementsTrigger[] GetTriggeredAchievementsByPlayer(string ExternalId, System.DateTime FromDate, System.DateTime ToDate, System.Nullable<int> GameId, string AchievementName, System.Nullable<int> TriggerId, System.Nullable<int> Take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://playngo.com/v1/CasinoGameTPService/GetTriggeredAchievementsByPlayer", ReplyAction="http://playngo.com/v1/CasinoGameTPService/GetTriggeredAchievementsByPlayerRespons" +
            "e")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="TriggeredAchievements")]
        System.Threading.Tasks.Task<IqSoft.CP.Integration.PlaynGoTPServicePrd.PlayerAchievementsTrigger[]> GetTriggeredAchievementsByPlayerAsync(string ExternalId, System.DateTime FromDate, System.DateTime ToDate, System.Nullable<int> GameId, string AchievementName, System.Nullable<int> TriggerId, System.Nullable<int> Take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://playngo.com/v1/CasinoGameTPService/GetTriggeredAchievements", ReplyAction="http://playngo.com/v1/CasinoGameTPService/GetTriggeredAchievementsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(IqSoft.CP.Integration.PlaynGoTPServicePrd.ServiceFault), Action="http://playngo.com/v1/CasinoGameTPService/GetTriggeredAchievementsServiceFaultFau" +
            "lt", Name="ServiceFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(IqSoft.CP.Integration.PlaynGoTPServicePrd.ValidationFault), Action="http://playngo.com/v1/CasinoGameTPService/GetTriggeredAchievementsValidationFault" +
            "Fault", Name="ValidationFault", Namespace="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="TriggeredAchievements")]
        IqSoft.CP.Integration.PlaynGoTPServicePrd.AchievementsTrigger[] GetTriggeredAchievements(System.DateTime FromDate, System.DateTime ToDate, string BrandId, System.Nullable<int> GameId, string AchievementName, System.Nullable<int> TriggerId, System.Nullable<int> Take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://playngo.com/v1/CasinoGameTPService/GetTriggeredAchievements", ReplyAction="http://playngo.com/v1/CasinoGameTPService/GetTriggeredAchievementsResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="TriggeredAchievements")]
        System.Threading.Tasks.Task<IqSoft.CP.Integration.PlaynGoTPServicePrd.AchievementsTrigger[]> GetTriggeredAchievementsAsync(System.DateTime FromDate, System.DateTime ToDate, string BrandId, System.Nullable<int> GameId, string AchievementName, System.Nullable<int> TriggerId, System.Nullable<int> Take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://playngo.com/v1/CasinoGameTPService/GetAchievementSummary", ReplyAction="http://playngo.com/v1/CasinoGameTPService/GetAchievementSummaryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(IqSoft.CP.Integration.PlaynGoTPServicePrd.ServiceFault), Action="http://playngo.com/v1/CasinoGameTPService/GetAchievementSummaryServiceFaultFault", Name="ServiceFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(IqSoft.CP.Integration.PlaynGoTPServicePrd.ValidationFault), Action="http://playngo.com/v1/CasinoGameTPService/GetAchievementSummaryValidationFaultFau" +
            "lt", Name="ValidationFault", Namespace="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="AchievementSummary")]
        IqSoft.CP.Integration.PlaynGoTPServicePrd.AchievementsSummary[] GetAchievementSummary(System.DateTime FromDate, System.DateTime ToDate, string AchievementName, string BrandId, System.Nullable<int> Take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://playngo.com/v1/CasinoGameTPService/GetAchievementSummary", ReplyAction="http://playngo.com/v1/CasinoGameTPService/GetAchievementSummaryResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="AchievementSummary")]
        System.Threading.Tasks.Task<IqSoft.CP.Integration.PlaynGoTPServicePrd.AchievementsSummary[]> GetAchievementSummaryAsync(System.DateTime FromDate, System.DateTime ToDate, string AchievementName, string BrandId, System.Nullable<int> Take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://playngo.com/v1/CasinoGameTPService/GetAchievements", ReplyAction="http://playngo.com/v1/CasinoGameTPService/GetAchievementsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(IqSoft.CP.Integration.PlaynGoTPServicePrd.ServiceFault), Action="http://playngo.com/v1/CasinoGameTPService/GetAchievementsServiceFaultFault", Name="ServiceFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(IqSoft.CP.Integration.PlaynGoTPServicePrd.ValidationFault), Action="http://playngo.com/v1/CasinoGameTPService/GetAchievementsValidationFaultFault", Name="ValidationFault", Namespace="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Achievements")]
        IqSoft.CP.Integration.PlaynGoTPServicePrd.AchievementConfiguration[] GetAchievements(IqSoft.CP.Integration.PlaynGoTPServicePrd.AchievementFilterType Status, System.Nullable<int> TriggerId, System.Nullable<int> Skip, System.Nullable<int> Take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://playngo.com/v1/CasinoGameTPService/GetAchievements", ReplyAction="http://playngo.com/v1/CasinoGameTPService/GetAchievementsResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Achievements")]
        System.Threading.Tasks.Task<IqSoft.CP.Integration.PlaynGoTPServicePrd.AchievementConfiguration[]> GetAchievementsAsync(IqSoft.CP.Integration.PlaynGoTPServicePrd.AchievementFilterType Status, System.Nullable<int> TriggerId, System.Nullable<int> Skip, System.Nullable<int> Take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://playngo.com/v1/CasinoGameTPService/GetGamesConfigurations", ReplyAction="http://playngo.com/v1/CasinoGameTPService/GetGamesConfigurationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(IqSoft.CP.Integration.PlaynGoTPServicePrd.ServiceFault), Action="http://playngo.com/v1/CasinoGameTPService/GetGamesConfigurationsServiceFaultFault" +
            "", Name="ServiceFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(IqSoft.CP.Integration.PlaynGoTPServicePrd.ValidationFault), Action="http://playngo.com/v1/CasinoGameTPService/GetGamesConfigurationsValidationFaultFa" +
            "ult", Name="ValidationFault", Namespace="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="GamesConfigurations")]
        IqSoft.CP.Integration.PlaynGoTPServicePrd.GameConfigurationResourceList GetGamesConfigurations(int ProductGroup, string Currency, string BrandId, string Context, string Country, string Region, string Channel, System.Nullable<int> LastGameId, System.Nullable<int> PageSize, int[] GameIdList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://playngo.com/v1/CasinoGameTPService/GetGamesConfigurations", ReplyAction="http://playngo.com/v1/CasinoGameTPService/GetGamesConfigurationsResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="GamesConfigurations")]
        System.Threading.Tasks.Task<IqSoft.CP.Integration.PlaynGoTPServicePrd.GameConfigurationResourceList> GetGamesConfigurationsAsync(int ProductGroup, string Currency, string BrandId, string Context, string Country, string Region, string Channel, System.Nullable<int> LastGameId, System.Nullable<int> PageSize, int[] GameIdList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://playngo.com/v1/CasinoGameTPService/GetEnabledGames", ReplyAction="http://playngo.com/v1/CasinoGameTPService/GetEnabledGamesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(IqSoft.CP.Integration.PlaynGoTPServicePrd.ServiceFault), Action="http://playngo.com/v1/CasinoGameTPService/GetEnabledGamesServiceFaultFault", Name="ServiceFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(IqSoft.CP.Integration.PlaynGoTPServicePrd.ValidationFault), Action="http://playngo.com/v1/CasinoGameTPService/GetEnabledGamesValidationFaultFault", Name="ValidationFault", Namespace="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="EnabledGames")]
        IqSoft.CP.Integration.PlaynGoTPServicePrd.CasinoGameSummary[] GetEnabledGames(int ProductGroup, string Channel, string Country, string Region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://playngo.com/v1/CasinoGameTPService/GetEnabledGames", ReplyAction="http://playngo.com/v1/CasinoGameTPService/GetEnabledGamesResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="EnabledGames")]
        System.Threading.Tasks.Task<IqSoft.CP.Integration.PlaynGoTPServicePrd.CasinoGameSummary[]> GetEnabledGamesAsync(int ProductGroup, string Channel, string Country, string Region);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CasinoGameTPServiceChannel : IqSoft.CP.Integration.PlaynGoTPServicePrd.CasinoGameTPService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CasinoGameTPServiceClient : System.ServiceModel.ClientBase<IqSoft.CP.Integration.PlaynGoTPServicePrd.CasinoGameTPService>, IqSoft.CP.Integration.PlaynGoTPServicePrd.CasinoGameTPService {
        
        public CasinoGameTPServiceClient() {
        }
        
        public CasinoGameTPServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CasinoGameTPServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CasinoGameTPServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CasinoGameTPServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public IqSoft.CP.Integration.PlaynGoTPServicePrd.FreegameOffer AddFreegameOffers(string UserId, System.Nullable<int> GameId, System.Nullable<int> Lines, System.Nullable<int> Coins, System.Nullable<decimal> Denomination, System.Nullable<int> Rounds, System.Nullable<System.DateTime> ExpireTime, System.Nullable<int> Turnover, string FreegameExternalId, string RequestId, System.Nullable<int> TriggerId, System.Nullable<bool> AllGamesVariants, int[] GameIdList) {
            return base.Channel.AddFreegameOffers(UserId, GameId, Lines, Coins, Denomination, Rounds, ExpireTime, Turnover, FreegameExternalId, RequestId, TriggerId, AllGamesVariants, GameIdList);
        }
        
        public System.Threading.Tasks.Task<IqSoft.CP.Integration.PlaynGoTPServicePrd.FreegameOffer> AddFreegameOffersAsync(string UserId, System.Nullable<int> GameId, System.Nullable<int> Lines, System.Nullable<int> Coins, System.Nullable<decimal> Denomination, System.Nullable<int> Rounds, System.Nullable<System.DateTime> ExpireTime, System.Nullable<int> Turnover, string FreegameExternalId, string RequestId, System.Nullable<int> TriggerId, System.Nullable<bool> AllGamesVariants, int[] GameIdList) {
            return base.Channel.AddFreegameOffersAsync(UserId, GameId, Lines, Coins, Denomination, Rounds, ExpireTime, Turnover, FreegameExternalId, RequestId, TriggerId, AllGamesVariants, GameIdList);
        }
        
        public IqSoft.CP.Integration.PlaynGoTPServicePrd.FreegameOffer[] GetFreegameOffers(string UserId, int Skip, int Take, IqSoft.CP.Integration.PlaynGoTPServicePrd.FreegameOfferState State) {
            return base.Channel.GetFreegameOffers(UserId, Skip, Take, State);
        }
        
        public System.Threading.Tasks.Task<IqSoft.CP.Integration.PlaynGoTPServicePrd.FreegameOffer[]> GetFreegameOffersAsync(string UserId, int Skip, int Take, IqSoft.CP.Integration.PlaynGoTPServicePrd.FreegameOfferState State) {
            return base.Channel.GetFreegameOffersAsync(UserId, Skip, Take, State);
        }
        
        public void CancelFreegame(string RequestId, int ProductGroup) {
            base.Channel.CancelFreegame(RequestId, ProductGroup);
        }
        
        public System.Threading.Tasks.Task CancelFreegameAsync(string RequestId, int ProductGroup) {
            return base.Channel.CancelFreegameAsync(RequestId, ProductGroup);
        }
        
        public IqSoft.CP.Integration.PlaynGoTPServicePrd.OpenGameId[] GetUnfinishedGames(string ExternalId) {
            return base.Channel.GetUnfinishedGames(ExternalId);
        }
        
        public System.Threading.Tasks.Task<IqSoft.CP.Integration.PlaynGoTPServicePrd.OpenGameId[]> GetUnfinishedGamesAsync(string ExternalId) {
            return base.Channel.GetUnfinishedGamesAsync(ExternalId);
        }
        
        public IqSoft.CP.Integration.PlaynGoTPServicePrd.PlayerAchievementsTrigger[] GetTriggeredAchievementsByPlayer(string ExternalId, System.DateTime FromDate, System.DateTime ToDate, System.Nullable<int> GameId, string AchievementName, System.Nullable<int> TriggerId, System.Nullable<int> Take) {
            return base.Channel.GetTriggeredAchievementsByPlayer(ExternalId, FromDate, ToDate, GameId, AchievementName, TriggerId, Take);
        }
        
        public System.Threading.Tasks.Task<IqSoft.CP.Integration.PlaynGoTPServicePrd.PlayerAchievementsTrigger[]> GetTriggeredAchievementsByPlayerAsync(string ExternalId, System.DateTime FromDate, System.DateTime ToDate, System.Nullable<int> GameId, string AchievementName, System.Nullable<int> TriggerId, System.Nullable<int> Take) {
            return base.Channel.GetTriggeredAchievementsByPlayerAsync(ExternalId, FromDate, ToDate, GameId, AchievementName, TriggerId, Take);
        }
        
        public IqSoft.CP.Integration.PlaynGoTPServicePrd.AchievementsTrigger[] GetTriggeredAchievements(System.DateTime FromDate, System.DateTime ToDate, string BrandId, System.Nullable<int> GameId, string AchievementName, System.Nullable<int> TriggerId, System.Nullable<int> Take) {
            return base.Channel.GetTriggeredAchievements(FromDate, ToDate, BrandId, GameId, AchievementName, TriggerId, Take);
        }
        
        public System.Threading.Tasks.Task<IqSoft.CP.Integration.PlaynGoTPServicePrd.AchievementsTrigger[]> GetTriggeredAchievementsAsync(System.DateTime FromDate, System.DateTime ToDate, string BrandId, System.Nullable<int> GameId, string AchievementName, System.Nullable<int> TriggerId, System.Nullable<int> Take) {
            return base.Channel.GetTriggeredAchievementsAsync(FromDate, ToDate, BrandId, GameId, AchievementName, TriggerId, Take);
        }
        
        public IqSoft.CP.Integration.PlaynGoTPServicePrd.AchievementsSummary[] GetAchievementSummary(System.DateTime FromDate, System.DateTime ToDate, string AchievementName, string BrandId, System.Nullable<int> Take) {
            return base.Channel.GetAchievementSummary(FromDate, ToDate, AchievementName, BrandId, Take);
        }
        
        public System.Threading.Tasks.Task<IqSoft.CP.Integration.PlaynGoTPServicePrd.AchievementsSummary[]> GetAchievementSummaryAsync(System.DateTime FromDate, System.DateTime ToDate, string AchievementName, string BrandId, System.Nullable<int> Take) {
            return base.Channel.GetAchievementSummaryAsync(FromDate, ToDate, AchievementName, BrandId, Take);
        }
        
        public IqSoft.CP.Integration.PlaynGoTPServicePrd.AchievementConfiguration[] GetAchievements(IqSoft.CP.Integration.PlaynGoTPServicePrd.AchievementFilterType Status, System.Nullable<int> TriggerId, System.Nullable<int> Skip, System.Nullable<int> Take) {
            return base.Channel.GetAchievements(Status, TriggerId, Skip, Take);
        }
        
        public System.Threading.Tasks.Task<IqSoft.CP.Integration.PlaynGoTPServicePrd.AchievementConfiguration[]> GetAchievementsAsync(IqSoft.CP.Integration.PlaynGoTPServicePrd.AchievementFilterType Status, System.Nullable<int> TriggerId, System.Nullable<int> Skip, System.Nullable<int> Take) {
            return base.Channel.GetAchievementsAsync(Status, TriggerId, Skip, Take);
        }
        
        public IqSoft.CP.Integration.PlaynGoTPServicePrd.GameConfigurationResourceList GetGamesConfigurations(int ProductGroup, string Currency, string BrandId, string Context, string Country, string Region, string Channel, System.Nullable<int> LastGameId, System.Nullable<int> PageSize, int[] GameIdList) {
            return base.Channel.GetGamesConfigurations(ProductGroup, Currency, BrandId, Context, Country, Region, Channel, LastGameId, PageSize, GameIdList);
        }
        
        public System.Threading.Tasks.Task<IqSoft.CP.Integration.PlaynGoTPServicePrd.GameConfigurationResourceList> GetGamesConfigurationsAsync(int ProductGroup, string Currency, string BrandId, string Context, string Country, string Region, string Channel, System.Nullable<int> LastGameId, System.Nullable<int> PageSize, int[] GameIdList) {
            return base.Channel.GetGamesConfigurationsAsync(ProductGroup, Currency, BrandId, Context, Country, Region, Channel, LastGameId, PageSize, GameIdList);
        }
        
        public IqSoft.CP.Integration.PlaynGoTPServicePrd.CasinoGameSummary[] GetEnabledGames(int ProductGroup, string Channel, string Country, string Region) {
            return base.Channel.GetEnabledGames(ProductGroup, Channel, Country, Region);
        }
        
        public System.Threading.Tasks.Task<IqSoft.CP.Integration.PlaynGoTPServicePrd.CasinoGameSummary[]> GetEnabledGamesAsync(int ProductGroup, string Channel, string Country, string Region) {
            return base.Channel.GetEnabledGamesAsync(ProductGroup, Channel, Country, Region);
        }
    }
}
